  openapi: 3.0.0
  info:
    title: Coffee Shop API
    version: 1.0.0
    description: API for managing orders and menu in a coffee shop.
    contact:
      name: CoffeShop API Support
      url: https://www.coffeeshop.com/support
      email: support@coffeshop.com
  # Security Schemes
  # Basic authentication is used for all endpoints.
  components:
    securitySchemes:
      basicAuth:
        type: http
        scheme: basic
  security:
    - basicAuth: []  # Apply basic authentication to all paths
  tags:
    - name: Orders
      description: Operations with orders
    - name: Menu
      description: Operations with menu
    - name: Customers
      description: Operations with customers
  servers:
    - url: https://api.coffeshop.com/v1
      description: Production server (uses live data)
    - url: https://sandbox-api.coffeshop.com:8443/v1
      description: Sandbox server (uses test data)
  paths:
    /orders:
      post: 
        tags:
          - Orders
        summary: Create a new order
        description: Creates a new order in the coffee shop.
        operationId: createOrder
        requestBody:
          required: true
          content:
            application/json:
              schema:
                # Order object definition (similar to GET /orders, but without id)
                type: object
                properties:
                  customer_name:
                    type: string
                    description: Customer name
                    example: Jane Doe
                    minLength: 3
                    maxLength: 50
                  items:
                    type: array
                    description: Items in the order
                    items:
                      # OrderItem object definition
                      type: object
                      properties:
                        menu_item_id:
                          type: integer
                          description: Menu item ID
                          example: 789
                        quantity:
                          type: integer
                          description: Quantity
                          example: 1
                  total_price:
                    type: number
                    format: float
                    description: Total order price
                    example: 5.25
        responses:
          '201':
            description: Order created
            content:
              application/json:
                schema:
                  # Order object definition (same as GET /orders)
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                      description: Order ID
                      example: 456
                    customer_name:
                      type: string
                      description: Customer name
                      example: Jane Doe
                      minLength: 3
                      maxLength: 50
                    items:
                      type: array
                      description: Items in the order
                      items:
                        # OrderItem object definition
                        type: object
                        properties:
                          menu_item_id:
                            type: integer
                            description: Menu item ID
                            example: 789
                          quantity:
                            type: integer
                            description: Quantity
                            example: 1
                    total_price:
                      type: number
                      format: float
                      description: Total order price
                      example: 5.25
          '400':
            description: Bad request (e.g., invalid order data)
            content:
              application/json:
                schema:
                  # Error object definition (same as above)
                  type: object
                  required:
                    - code
                    - message
                  properties:
                    code:
                      type: integer
                      format: int32
                      description: Error code
                      example: 400
                    message:
                      type: string
                      description: Error message
                      example: Invalid input data
          '500':
            description: Server error
            content:
              application/json:
                schema:
                  # Error object definition (same as above)
                  type: object
                  required:
                    - code
                    - message
                  properties:
                    code:
                      type: integer
                      format: int32
                      description: Error code
                      example: 500
                    message:
                      type: string
                      description: Error message
                      example: Internal server error

      get:
        tags:
          - Orders
        summary: Get list of orders
        description: Returns a list of all orders in the coffee shop.
        operationId: getOrders
        responses:
          '200':
            description: List of orders
            content:
              application/json:
                schema:
                  type: array
                  items:
                    # Order object definition
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                        description: Order ID
                        example: 123
                      customer_name:
                        type: string
                        description: Customer name
                        example: John Doe
                        minLength: 3
                        maxLength: 50
                      items:
                        type: array
                        description: Items in the order
                        items:
                          # OrderItem object definition
                          type: object
                          properties:
                            menu_item_id:
                              type: integer
                              description: Menu item ID
                              example: 456
                            quantity:
                              type: integer
                              description: Quantity
                              example: 2
                      total_price:
                        type: number
                        format: float
                        description: Total order price
                        example: 10.50
          '500':
            description: Server error
            content:
              application/json:
                schema:
                  # Error object definition
                  type: object
                  required:
                    - code
                    - message
                  properties:
                    code:
                      type: integer
                      format: int32
                      description: Error code
                      example: 500
                    messages:
                      type: string
                      description: Error message
                      example: Internal server error

    /orders/{order_id}:
      delete:
        tags:
          - Orders
        summary: Delete an order
        description: Deletes an order with the given ID.
        operationId: deleteOrder
        parameters:
          - in: path
            name: order_id
            schema:
              type: integer
            required: true
            description: ID of the order to delete
            example: 123
        responses:
          '204':
            description: Order was deleted
          '404':
            description: Order not found
            content:
              application/json:
                schema:
                  # Error object definition (same as above)
                  type: object
                  required:
                    - code
                    - message
                  properties:
                    code:
                      type: integer
                      format: int32
                      description: Error code
                      example: 404
                    message:
                      type: string
                      description: Error message
                      example: Order not found
          '500':
            description: Server error
            content:
              application/json:
                schema:
                  # Error object definition (same as above)
                  type: object
                  required:
                    - code
                    - message
                  properties:
                    code:
                      type: integer
                      format: int32
                      description: Error code
                      example: 500
                    message:
                      type: string
                      description: Error message
                      example: Internal server error
    /menu:
      get:
        tags:
          - Menu
        summary: Get menu
        description: Returns the current menu of the coffee shop.
        operationId: getMenu
        responses:
          '200':
            description: Menu of the coffee shop
            content:
              application/json:
                schema:
                  type: array
                  items:
                    # MenuItem object definition
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                        description: Menu item ID
                        example: 456
                      name:
                        type: string
                        description: Name of the item
                        example: Cappuccino
                        minLength: 3
                        maxLength: 50
                      description:
                        type: string
                        nullable: true
                        description: Description of the item
                        example: A delicious cappuccino made with our finest espresso.
                      price:
                        type: number
                        format: float
                        description: Price of the item
                        example: 3.50
          '500':
            description: Server error
            content:
              application/json:
                schema:
                  # Error object definition (same as above)
                  type: object
                  required:
                    - code
                    - message
                  properties:
                    code:
                      type: integer
                      format: int32
                      description: Error code
                      example: 500
                    message:
                      type: string
                      description: Error message
                      example: Internal server error